# put cloudflare credentials in release namespace for use in a post-delete hook
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "teleport.fullname" . }}-cloudflare-credentials
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "teleport.labels" . | indent 4 }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation"
type: Opaque
data:
  api_key: {{ .Values.secrets.cloudflare.api_key | b64enc | quote }}
  email: {{ .Values.secrets.cloudflare.email | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-tls-config
  namespace: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}
  labels:
{{ include "teleport.labels" . | indent 4 }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
type: Opaque
data:
  # we want a non-quoted boolean value encoded as base64
  enabled: {{ .Values.proxy.tls.enabled | quote | replace "\"" "" | b64enc }}
  letsencrypt-enabled: {{ .Values.letsencrypt.enabled | quote | replace "\"" "" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-credentials
  namespace: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}
  labels:
{{ include "teleport.labels" . | indent 4 }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
type: Opaque
data:
  api_key: {{ .Values.secrets.cloudflare.api_key | b64enc | quote }}
  email: {{ .Values.secrets.cloudflare.email | b64enc | quote }}
---
{{- if .Values.license.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: teleport-license
  namespace: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}
  labels:
{{ include "teleport.labels" . | indent 4 }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
type: Opaque
data:
  license.pem: {{ .Values.secrets.license | b64enc }}
{{- end -}}

{{- if not (eq (index .Values.extraClusterNames 0) "") -}}
{{- $root := . -}}
{{- range .Values.extraClusterNames }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "teleport.fullname" $root }}-{{ . }}-tls-config
  namespace: {{ template "teleport.fullname" $root }}-{{ . }}
  labels:
{{ include "teleport.labels" $root | indent 4 }}
{{- if $root.Values.labels }}
{{ toYaml $root.Values.labels | indent 4 }}
{{- end }}
type: Opaque
data:
  # we want a non-quoted boolean value encoded as base64
  enabled: {{ $root.Values.proxy.tls.enabled | quote | replace "\"" "" | b64enc }}
  letsencrypt-enabled: {{ $root.Values.letsencrypt.enabled | quote | replace "\"" "" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-credentials
  namespace: {{ template "teleport.fullname" $root }}-{{ . }}
  labels:
{{ include "teleport.labels" $root | indent 4 }}
{{- if $root.Values.labels }}
{{ toYaml $root.Values.labels | indent 4 }}
{{- end }}
type: Opaque
data:
  api_key: {{ $root.Values.secrets.cloudflare.api_key | b64enc | quote }}
  email: {{ $root.Values.secrets.cloudflare.email | b64enc | quote }}
---
{{- if $root.Values.license.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: teleport-license
  namespace: {{ template "teleport.fullname" $root }}-{{ . }}
  labels:
{{ include "teleport.labels" $root | indent 4 }}
{{- if $root.Values.labels }}
{{ toYaml $root.Values.labels | indent 4 }}
{{- end }}
type: Opaque
data:
  license.pem: {{ $root.Values.secrets.license | b64enc }}
{{- end -}}
{{- end -}}
{{- end }}