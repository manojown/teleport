apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-auth
  namespace: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}
  labels:
{{ include "teleport.labels" . | indent 4 }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: auth
      annotations:
        checksum/config: {{ toYaml .Values.config | sha256sum }}
{{- if .Values.annotations }}
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: auth
        namespace: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}
        image: "{{ .Values.auth.image.repository }}:{{ tpl .Values.auth.image.tag . }}"
        imagePullPolicy: {{ .Values.auth.image.pullPolicy }}
        args:
{{- if .Values.extraArgs }}
{{ toYaml .Values.extraArgs | indent 8 }}
{{- end }}
{{- if not .Values.proxy.tls.enabled }}
        - --insecure-no-tls
{{- end }}
        env:
        - name: ROLE
          value: auth
        - name: CLUSTER_TYPE
          value: primary
{{- range $key, $value := .Values.extraVars }}
        - name: {{ $key }}
          value: {{ $value }}
{{- end }}
        # See https://gravitational.com/teleport/docs/admin-guide/#ports
        ports:
{{- range $key, $port := .Values.ports.auth }}
        - name: {{ $key }}
{{ toYaml $port | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
{{- if .Values.proxy.tls.enabled }}
        - mountPath: /var/lib/certs
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-tls-web
          readOnly: true
{{- end }}
        - mountPath: /etc/teleport
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-config
          readOnly: true
{{- if .Values.license.enabled }}
        - mountPath: {{ .Values.license.mountPath }}
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-license
          readOnly: true
{{- end }}
        - mountPath: /var/lib/teleport
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-storage
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
{{- end }}
# sidecar
      - name: sidecar
        image: "{{ .Values.sidecar.image.repository }}:{{ tpl .Values.sidecar.image.tag . }}"
        imagePullPolicy: {{ .Values.sidecar.image.pullPolicy }}
{{- if .Values.sidecar.command }}
        command: {{ .Values.sidecar.command }}
{{- end }}
{{- if .Values.sidecar.args }}
        args:
{{ toYaml .Values.sidecar.args | indent 8 }}
{{- end }}
        env:
        - name: ROLE
          value: sidecar
        - name: CLUSTER_TYPE
          value: primary
        - name: CLUSTER_NAME
          value: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
{{- if .Values.proxy.tls.enabled }}
        - mountPath: /var/lib/certs
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-tls-web
          readOnly: true
{{- end }}
        - mountPath: /etc/teleport
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-config
          readOnly: true
{{- if .Values.license.enabled }}
        - mountPath: {{ .Values.license.mountPath }}
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-license
          readOnly: true
{{- end }}
        - mountPath: /var/lib/teleport
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-storage
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
{{- end }}
# end sidecar
      volumes:
{{- if .Values.proxy.tls.enabled }}
      - name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-tls-web
        secret:
          secretName: tls-web
{{- end }}
{{- if .Values.license.enabled }}
      - name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-license
        secret:
          secretName: {{ .Values.license.secretName }}
{{- end }}
      - name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-config
        configMap:
          name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-cluster-config
      - name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-storage
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (printf "%s-%s-%s" (include "teleport.fullname" .) .Values.mainClusterName "storage") }}
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 6 }}
{{- end }}
{{- if .Values.auth.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.auth.image.pullSecrets | indent 6 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
{{- end }}
      serviceAccountName: {{ template "teleport.serviceAccountName" . }}-{{ .Values.mainClusterName }}

{{- if not (eq (index .Values.extraClusterNames 0) "") -}}
{{- $root := . -}}
{{- range .Values.extraClusterNames }}
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "teleport.fullname" $root }}-{{ . }}-auth
  namespace: {{ template "teleport.fullname" $root }}-{{ . }}
  labels:
{{ include "teleport.labels" $root | indent 4 }}
{{- if $root.Values.labels }}
{{ toYaml $root.Values.labels | indent 4 }}
{{- end }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "teleport.fullname" $root }}-{{ . }}
        release: {{ $root.Release.Name }}
        heritage: {{ $root.Release.Service }}
        role: auth
      annotations:
        checksum/config: {{ toYaml $root.Values.config | sha256sum }}
{{- if $root.Values.annotations }}
{{ toYaml $root.Values.annotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: auth
        image: "{{ $root.Values.auth.image.repository }}:{{ tpl $root.Values.auth.image.tag $root }}"
        imagePullPolicy: {{ $root.Values.auth.image.pullPolicy }}
        args:
{{- if $root.Values.extraArgs }}
{{ toYaml $root.Values.extraArgs | indent 8 }}
{{- end }}
{{- if not $root.Values.proxy.tls.enabled }}
        - --insecure-no-tls
{{- end }}
        env:
        - name: ROLE
          value: auth
        - name: CLUSTER_TYPE
          value: secondary
{{- range $key, $value := $root.Values.extraVars }}
        - name: {{ $key }}
          value: {{ $value }}
{{- end }}
        # See https://gravitational.com/teleport/docs/admin-guide/#ports
        ports:
{{- range $key, $port := $root.Values.ports.auth }}
        - name: {{ $key }}
{{ toYaml $port | indent 10 }}
{{- end }}
        resources:
{{ toYaml $root.Values.resources | indent 10 }}
        volumeMounts:
{{- if $root.Values.proxy.tls.enabled }}
        - mountPath: /var/lib/certs
          name: {{ template "teleport.fullname" $root }}-tls-web
          readOnly: true
{{- end }}
        - mountPath: /etc/teleport
          name: {{ template "teleport.fullname" $root }}-{{ . }}-config
          readOnly: true
{{- if $root.Values.license.enabled }}
        - mountPath: {{ $root.Values.license.mountPath }}
          name: {{ template "teleport.fullname" $root }}-license
          readOnly: true
{{- end }}
        - mountPath: /var/lib/teleport
          name: {{ template "teleport.fullname" $root }}-{{ . }}-storage
{{- if $root.Values.extraVolumeMounts }}
{{ toYaml $root.Values.extraVolumeMounts | indent 8 }}
{{- end }}
# sidecar
      - name: sidecar
        image: "{{ $root.Values.sidecar.image.repository }}:{{ tpl $root.Values.sidecar.image.tag $root }}"
        imagePullPolicy: {{ $root.Values.sidecar.image.pullPolicy }}
{{- if $root.Values.sidecar.command }}
        command: {{ $root.Values.sidecar.command }}
{{- end }}
{{- if $root.Values.sidecar.args }}
        args:
{{ toYaml $root.Values.sidecar.args | indent 8 }}
{{- end }}
        env:
        - name: ROLE
          value: sidecar
        - name: CLUSTER_TYPE
          value: secondary
        - name: MAIN_CLUSTER_NAME
          value: {{ template "teleport.fullname" $root }}-{{ $root.Values.mainClusterName }}
        - name: CLUSTER_NAME
          value: {{ template "teleport.fullname" $root }}-{{ . }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
{{ toYaml $root.Values.resources | indent 10 }}
        volumeMounts:
{{- if $root.Values.proxy.tls.enabled }}
        - mountPath: /var/lib/certs
          name: {{ template "teleport.fullname" $root }}-tls-web
          readOnly: true
{{- end }}
        - mountPath: /etc/teleport
          name: {{ template "teleport.fullname" $root }}-{{ . }}-config
          readOnly: true
{{- if $root.Values.license.enabled }}
        - mountPath: {{ $root.Values.license.mountPath }}
          name: {{ template "teleport.fullname" $root }}-license
          readOnly: true
{{- end }}
        - mountPath: /var/lib/teleport
          name: {{ template "teleport.fullname" $root }}-{{ . }}-storage
{{- if $root.Values.extraVolumeMounts }}
{{ toYaml $root.Values.extraVolumeMounts | indent 8 }}
{{- end }}
# end sidecar
      volumes:
{{- if $root.Values.proxy.tls.enabled }}
      - name: {{ template "teleport.fullname" $root }}-tls-web
        secret:
          secretName: tls-web
{{- end }}
{{- if $root.Values.license.enabled }}
      - name: {{ template "teleport.fullname" $root }}-license
        secret:
          secretName: {{ $root.Values.license.secretName }}
{{- end }}
      - name: {{ template "teleport.fullname" $root }}-{{ . }}-config
        configMap:
          name: {{ template "teleport.fullname" $root }}-{{ . }}-cluster-config
      - name: {{ template "teleport.fullname" $root }}-{{ . }}-storage
        {{- if $root.Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ $root.Values.persistence.existingClaim | default (printf "%s-%s-%s" (include "teleport.fullname" $root) .  "storage") }}
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- if $root.Values.extraVolumes }}
{{ toYaml $root.Values.extraVolumes | indent 6 }}
{{- end }}
{{- if $root.Values.auth.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml $root.Values.auth.image.pullSecrets | indent 6 }}
{{- end }}
{{- if $root.Values.affinity }}
      affinity:
{{ toYaml $root.Values.affinity | indent 8 }}
{{- end }}
{{- if $root.Values.tolerations }}
      tolerations:
{{ toYaml $root.Values.tolerations | indent 6 }}
{{- end }}
      serviceAccountName: {{ template "teleport.serviceAccountName" $root }}-{{ . }}
{{- end -}}
{{- end }}